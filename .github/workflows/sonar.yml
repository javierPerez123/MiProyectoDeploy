name: SonarQube
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  sonarcloud:
    runs-on: windows-latest
    steps:
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: 17
        distribution: 'zulu'
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
    - name: Set up MSBuild
      uses: microsoft/setup-msbuild@v1
    - name: Install SonarScanner for MSBuild
      run: |
        New-Item -ItemType Directory -Path ".\sonarscanner" -Force
        $url = "https://github.com/SonarSource/sonar-scanner-msbuild/releases/download/9.2.1.110358/sonar-scanner-9.2.1.110358-net-framework.zip"
        $output = ".\sonarscanner\sonar-scanner.zip"
        Invoke-WebRequest -Uri $url -OutFile $output
        Expand-Archive -Path $output -DestinationPath ".\sonarscanner" -Force
        # Listar contenido para depurar
        Write-Output "Contenido de sonarscanner:"
        dir .\sonarscanner\
        Write-Output "Contenido de subcarpetas:"
        Get-ChildItem -Path ".\sonarscanner" -Recurse
        # Verificar que el ejecutable exista
        if (-not (Test-Path ".\sonarscanner\SonarScanner.MSBuild.exe")) {
          throw "SonarScanner.MSBuild.exe no encontrado en la ruta esperada. Verifica la extracci√≥n."
        }
    - name: Begin SonarScanner Analysis
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        & ".\sonarscanner\SonarScanner.MSBuild.exe" begin /k:"MiProyectoDeploy" /o:"javierperez123" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.scanAllFiles=true
    - name: Build Project
      run: |
        msbuild MiProyectoDeploy.sln /t:Rebuild
    - name: End SonarScanner Analysis
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        & ".\sonarscanner\SonarScanner.MSBuild.exe" end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"